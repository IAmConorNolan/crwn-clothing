{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Conor\\\\Desktop\\\\React Course\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from './cart.types.js';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload) //spread in existing array values, and then anything in payload (new values)\n\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id) //keep any item where this isn't true!\n\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:\\Users\\Conor\\Desktop\\React Course\\crwn-clothing\\client\\src\\redux\\cart\\card.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,iBAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;;AAIA,SAAKJ,eAAe,CAACW,QAArB;AACQ,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB,CAF5B,CAE8D;;AAF9D;;AAIR,SAAKZ,eAAe,CAACa,oBAArB;AACQ,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACPC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADpC,CAFf,CAIU;;AAJV;;AAMR,SAAKhB,eAAe,CAACiB,WAArB;AACQ,+BACOV,KADP;AAEIF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFjC;;AAIR,SAAKZ,eAAe,CAACkB,UAArB;AACI,+BACOX,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAKR;AACI,aAAOE,KAAP;AA9BR;AAgCH,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types.js'\r\nimport { addItemToCart, removeItemFromCart } from './cart.utils'\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            };\r\n            case CartActionTypes.ADD_ITEM:\r\n                    return {\r\n                        ...state,\r\n                        cartItems: addItemToCart(state.cartItems, action.payload) //spread in existing array values, and then anything in payload (new values)\r\n                    };\r\n            case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n                    return {\r\n                        ...state,\r\n                        cartItems: state.cartItems.filter(\r\n                            cartItem => cartItem.id !== action.payload.id\r\n                            ) //keep any item where this isn't true!\r\n                    };\r\n            case CartActionTypes.REMOVE_ITEM:\r\n                    return {\r\n                        ...state,\r\n                        cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n                    };\r\n            case CartActionTypes.CLEAR_CART:\r\n                return {\r\n                    ...state,\r\n                    cartItems: [],\r\n                    };\r\n                    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}